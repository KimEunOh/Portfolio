---
description: 
globs: 
alwaysApply: true
---
현재 상황 정리
문제점
프롬프트 수정 과정에서 시스템 워크플로우와 맞지 않는 구조로 변경됨
1단계 (LLM → HTML 템플릿 채우기)에 적합하지 않은 통합 구조로 수정됨
기존의 개별 필드 구조가 HTML 폼 필드 매핑에 더 적합했음
시스템 워크플로우 재확인
1단계: 사용자 입력 → LLM 슬롯 추출 → HTML 템플릿 개별 필드 채우기 → 사용자 미리보기
2단계: 사용자가 HTML 폼에서 검토/수정 → 전송 → 백엔드에서 최종 API Payload로 변환
수정 계획
1. 프롬프트 초기화
모든 프롬프트를 이전 커밋 버전으로 되돌리기
기존의 개별 필드 구조 유지 (예: start_date, end_date, reason 등)
2. 올바른 수정 방향
1단계용: 프롬프트는 HTML 템플릿의 개별 필드에 매핑되는 구조 유지
2단계용: service.py에서만 개별 필드 → 통합 API Payload 변환 로직 구현
utils.py의 강력한 날짜 파싱 기능은 2단계에서 활용
3. 실제 수정이 필요한 부분
service.py: HTML 폼 데이터 → 최종 API Payload 변환 로직
모든양식_JSON_형식.json: NaN → null 수정
HTML 템플릿들: 필요시 필드명 조정
JavaScript 파일들: 필요시 데이터 수집 로직 조정
4. 새 채팅에서 진행할 작업 순서
프롬프트 파일들을 이전 커밋으로 초기화
모든양식_JSON_형식.json의 NaN → null 수정
service.py의 2단계 변환 로직 구현 (개별 필드 → 통합 구조)

필요시 HTML/JS 파일 조정