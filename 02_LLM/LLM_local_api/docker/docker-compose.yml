version: "3.8"
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: my_prometheus
    volumes:
      # 프로메테우스 설정 파일을 마운트
      - ../prometheus_config.yml:/etc/prometheus/prometheus.yml
      - ../prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: my_grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP:-false}
      - GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS:-grafana-piechart-panel}

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: llm_local_api
    volumes:
      - ../documents:/app/documents
      - ../static:/app/static
      - ../templates:/app/templates
      - ../faiss:/app/faiss
    ports:
      - "8000:8000"
      - "8080:8080"
    depends_on:
      - prometheus
    networks:
      - app-network
    environment:
      - PROMETHEUS_URL=${PROMETHEUS_URL:-http://prometheus:9090}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ALLOW_DANGEROUS_DESERIALIZATION=${ALLOW_DANGEROUS_DESERIALIZATION:-True}
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-4G}
        reservations:
          memory: ${MEMORY_RESERVATION:-2G}
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  grafana-storage:
    driver: local